using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PythonWrapper
{
    //This is parts from the OpenCV Python Class
    public class cv2Wrapper
    {
        private string LocalDirectory = Directory.GetCurrentDirectory();
        ///Color Space Conversions
        ///
        public void CvtColor(string src, string dst, int code, int dstCn)
        {
            
        }

        public void RemoveAlhpaChannel(string src, string dst)
        {
            string cmd = LocalDirectory + @"\PythonScripts\cv2\cvtColor.py";
            if(File.Exists(cmd) == true )
            {
                Console.Out.WriteLine("Found Script");
            }

            if(File.Exists(Properties.Settings.Default.PYTHON_DIR + @"\python.exe") == true)
            {
                Console.Out.WriteLine("Found python");
            }
            string args = "--input " + src + " --output " + dst;

            Console.Out.WriteLine(run_cmd(cmd, ""));
        }

        ///Geometric Image Transformations
        ///

        ///Image Filtering
        ///


        //command to work off of
        public string run_cmd(string cmd, string args)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = Properties.Settings.Default.PYTHON_DIR + @"\python.exe";
            start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = false; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    
                    return result;
                }
            }
        }
    }
}
